<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lzdn.ucenter.dao.mapper.CpySpecificationMapper">
  <resultMap id="BaseResultMap" type="com.lzdn.ucenter.dao.model.CpySpecification">
    <id column="specification_id" jdbcType="INTEGER" property="specificationId" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
    <result column="specification_types" jdbcType="VARCHAR" property="specificationTypes" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="specification_type" jdbcType="VARCHAR" property="specificationType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    specification_id, company_id, specification_types, pid, specification_type
  </sql>
  <select id="selectByExample" parameterType="com.lzdn.ucenter.dao.model.CpySpecificationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cpy_specification
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cpy_specification
    where specification_id = #{specificationId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cpy_specification
    where specification_id = #{specificationId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lzdn.ucenter.dao.model.CpySpecificationExample">
    delete from cpy_specification
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lzdn.ucenter.dao.model.CpySpecification">
    insert into cpy_specification (specification_id, company_id, specification_types, 
      pid, specification_type)
    values (#{specificationId,jdbcType=INTEGER}, #{companyId,jdbcType=INTEGER}, #{specificationTypes,jdbcType=VARCHAR}, 
      #{pid,jdbcType=INTEGER}, #{specificationType,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lzdn.ucenter.dao.model.CpySpecification">
    insert into cpy_specification
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="specificationId != null">
        specification_id,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="specificationTypes != null">
        specification_types,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="specificationType != null">
        specification_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="specificationId != null">
        #{specificationId,jdbcType=INTEGER},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="specificationTypes != null">
        #{specificationTypes,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="specificationType != null">
        #{specificationType,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lzdn.ucenter.dao.model.CpySpecificationExample" resultType="java.lang.Long">
    select count(*) from cpy_specification
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cpy_specification
    <set>
      <if test="record.specificationId != null">
        specification_id = #{record.specificationId,jdbcType=INTEGER},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=INTEGER},
      </if>
      <if test="record.specificationTypes != null">
        specification_types = #{record.specificationTypes,jdbcType=VARCHAR},
      </if>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.specificationType != null">
        specification_type = #{record.specificationType,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cpy_specification
    set specification_id = #{record.specificationId,jdbcType=INTEGER},
      company_id = #{record.companyId,jdbcType=INTEGER},
      specification_types = #{record.specificationTypes,jdbcType=VARCHAR},
      pid = #{record.pid,jdbcType=INTEGER},
      specification_type = #{record.specificationType,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lzdn.ucenter.dao.model.CpySpecification">
    update cpy_specification
    <set>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="specificationTypes != null">
        specification_types = #{specificationTypes,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="specificationType != null">
        specification_type = #{specificationType,jdbcType=VARCHAR},
      </if>
    </set>
    where specification_id = #{specificationId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lzdn.ucenter.dao.model.CpySpecification">
    update cpy_specification
    set company_id = #{companyId,jdbcType=INTEGER},
      specification_types = #{specificationTypes,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=INTEGER},
      specification_type = #{specificationType,jdbcType=VARCHAR}
    where specification_id = #{specificationId,jdbcType=INTEGER}
  </update>
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>